<%= form_with(model: article, local: true, class: "article-form") do |form| %>
  <% if article.errors.any? %>
    <div class="error-messages">
      <h4><%= pluralize(article.errors.count, "error") %> prohibited this article from being saved:</h4>
      <ul>
        <% article.errors.full_messages.each do |message| %>
          <li><%= message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div class="form-group">
    <%= form.label :title, class: "form-label" %>
    <%= form.text_field :title, class: "form-input", placeholder: "Enter article title..." %>
  </div>

  <div class="form-group">
    <%= form.label :category, class: "form-label" %>
    <%= form.text_field :category, class: "form-input", placeholder: "e.g., House Rules, Session Report, Character Guide..." %>
    <small class="form-help">Optional: Choose a category to help organize your articles</small>
  </div>

  <div class="form-group">
    <%= form.label :tags, class: "form-label" %>
    <div class="tags-input-container">
      <input type="text" 
             id="tags-input" 
             class="form-input" 
             placeholder="Type tags and press Enter (e.g., combat, beginner, magic...)"
             data-tags="<%= article.tags.join(',') if article.tags.any? %>">
      <div id="tags-display" class="tags-display"></div>
    </div>
    <small class="form-help">Add tags to help categorize your article. Type a tag and press Enter.</small>
    
    <!-- Hidden inputs for tags -->
    <div id="tags-hidden-inputs">
      <% if article.tags.any? %>
        <% article.tags.each do |tag| %>
          <%= hidden_field_tag "article[tags][]", tag %>
        <% end %>
      <% end %>
    </div>
  </div>

  <div class="form-group">
    <%= form.label :content, class: "form-label" %>
    <%= form.text_area :content, class: "form-textarea", rows: 15, 
                       placeholder: "Write your article content here... You can use **bold** and *italic* markdown." %>
    <small class="form-help">Markdown supported: **bold**, *italic*</small>
  </div>

  <div class="form-actions">
    <%= form.submit class: "btn btn-primary" %>
    <%= link_to "Cancel", article_path(article), class: "btn btn-secondary" if article.persisted? %>
    <%= link_to "Cancel", articles_path, class: "btn btn-secondary" unless article.persisted? %>
  </div>
<% end %>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const tagsInput = document.getElementById('tags-input');
  const tagsDisplay = document.getElementById('tags-display');
  const hiddenInputsContainer = document.getElementById('tags-hidden-inputs');
  
  let tags = [];
  
  // Initialize with existing tags
  const existingTags = tagsInput.dataset.tags;
  if (existingTags) {
    tags = existingTags.split(',').filter(tag => tag.trim() !== '');
    updateTagsDisplay();
  }
  
  tagsInput.addEventListener('keypress', function(e) {
    if (e.key === 'Enter') {
      e.preventDefault();
      const tag = this.value.trim();
      if (tag && !tags.includes(tag)) {
        tags.push(tag);
        updateTagsDisplay();
        this.value = '';
      }
    }
  });
  
  function updateTagsDisplay() {
    // Update visual display
    tagsDisplay.innerHTML = tags.map(tag => 
      `<span class="tag-item">
         ${tag}
         <button type="button" class="tag-remove" data-tag="${tag}">Ã—</button>
       </span>`
    ).join('');
    
    // Update hidden inputs
    hiddenInputsContainer.innerHTML = tags.map(tag => 
      `<input type="hidden" name="article[tags][]" value="${tag}">`
    ).join('');
    
    // Add event listeners to remove buttons
    document.querySelectorAll('.tag-remove').forEach(button => {
      button.addEventListener('click', function() {
        const tagToRemove = this.dataset.tag;
        tags = tags.filter(tag => tag !== tagToRemove);
        updateTagsDisplay();
      });
    });
  }
});
</script>

<style>
  .article-form {
    max-width: 800px;
    margin: 0 auto;
    background: white;
    padding: 32px;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    border: 1px solid #e1e5e9;
  }

  .error-messages {
    background-color: #f8d7da;
    color: #721c24;
    padding: 16px;
    border-radius: 4px;
    border: 1px solid #f5c6cb;
    margin-bottom: 24px;
  }

  .error-messages h4 {
    margin: 0 0 12px 0;
    font-size: 1em;
  }

  .error-messages ul {
    margin: 0;
    padding-left: 20px;
  }

  .form-group {
    margin-bottom: 24px;
  }

  .form-label {
    display: block;
    margin-bottom: 8px;
    font-weight: 500;
    color: #2c3e50;
  }

  .form-input {
    width: 100%;
    padding: 12px;
    border: 1px solid #dee2e6;
    border-radius: 4px;
    font-size: 1em;
    transition: border-color 0.3s;
  }

  .form-input:focus {
    outline: none;
    border-color: #3498db;
    box-shadow: 0 0 0 2px rgba(52, 152, 219, 0.2);
  }

  .form-textarea {
    width: 100%;
    padding: 12px;
    border: 1px solid #dee2e6;
    border-radius: 4px;
    font-size: 1em;
    font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;
    line-height: 1.5;
    resize: vertical;
    transition: border-color 0.3s;
  }

  .form-textarea:focus {
    outline: none;
    border-color: #3498db;
    box-shadow: 0 0 0 2px rgba(52, 152, 219, 0.2);
  }

  .form-help {
    display: block;
    margin-top: 6px;
    color: #6c757d;
    font-size: 0.9em;
  }

  .tags-input-container {
    position: relative;
  }

  .tags-display {
    display: flex;
    flex-wrap: wrap;
    gap: 8px;
    margin-top: 12px;
  }

  .tag-item {
    background-color: #f8f9fa;
    color: #495057;
    padding: 6px 12px;
    border-radius: 16px;
    font-size: 0.9em;
    border: 1px solid #dee2e6;
    display: flex;
    align-items: center;
    gap: 8px;
  }

  .tag-remove {
    background: none;
    border: none;
    color: #6c757d;
    cursor: pointer;
    font-size: 1.2em;
    line-height: 1;
    padding: 0;
    width: 16px;
    height: 16px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .tag-remove:hover {
    color: #e74c3c;
  }

  .form-actions {
    display: flex;
    gap: 16px;
    justify-content: flex-end;
    padding-top: 24px;
    border-top: 1px solid #e1e5e9;
  }

  .btn {
    padding: 12px 24px;
    border-radius: 6px;
    text-decoration: none;
    font-size: 1em;
    border: 1px solid transparent;
    cursor: pointer;
    transition: all 0.3s;
    font-weight: 500;
  }

  .btn-primary {
    background-color: #3498db;
    color: white;
  }

  .btn-primary:hover {
    background-color: #2980b9;
  }

  .btn-secondary {
    background-color: #95a5a6;
    color: white;
  }

  .btn-secondary:hover {
    background-color: #7f8c8d;
  }
</style>